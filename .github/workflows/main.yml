name: Node.js modules auto update
 
on:
  push:
    branches:    
    - main 
  schedule:
    - cron:  '0 0 * * *'
  # pull_request:
  #   branches: [ main ]

  # Try enabling auto-merge for the specified pull request or all open pull requests if none is specified.
  workflow_dispatch:
    inputs:
      pull-request:
        description: Pull Request Number
        required: false

jobs:
  auto_update:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - uses: docker://node:lts-buster-slim
    - name: update and test
      uses: poad/update-node-modules@v1
      with:
        yarn: true
    - name: update and test
      run: |
        yarn install && \
        yarn build && \
        yarn test && \
        rm -rf coverage node_modules .next build
    - name: Commit files
      run: |
        git config --local user.email "ken-yo@mbr.nifty.com"
        git config --local user.name "Kenji Saito"
        TIMESTAMP=$(date)
        BRANCH_NAME="feature/bump-modules-$(date "+%Y%m%d-%H%M%S")"
        git switch -c "${BRANCH_NAME}"
        if [ $(git diff | wc -l) -eq 0 ]; then
          echo "CHANGE_STATE=no_changed" >> $GITHUB_ENV
          exit 0
        fi
        git add *
        git commit -m "Auto update at ${TIMESTAMP}"
        echo "BRANCH_NAME=${BRANCH_NAME}" >> $GITHUB_ENV
        echo "TIMESTAMP=${TIMESTAMP}" >> $GITHUB_ENV
        echo "CHANGE_STATE=changed" >> $GITHUB_ENV
    - name: Push Changes
      if: success() && env.CHANGE_STATE == 'changed'
      uses: ad-m/github-push-action@v0.6.0
      with:
        github_token: ${{ secrets.PERSONAL_TOKEN_FOR_GITHUB_ACTIONS }}
        branch: ${{ env.BRANCH_NAME }}
    - name: Create pull request
      id: create-pull-request
      if: success() && env.CHANGE_STATE == 'changed'
      uses: poad/github-pull-requester@v0.0.1
      with:
        head_branch: ${{ env.BRANCH_NAME }}
        title: ${{ format('Auto update at {0}', env.TIMESTAMP) }}
        body: ${{ format('Update the modules at {0}', env.TIMESTAMP) }}
        github_token: ${{ secrets.PERSONAL_TOKEN_FOR_GITHUB_ACTIONS }}
        repository: next-ts-template
        owner: poad
    - name: Extract response
      env:
        RESULT: ${{ steps.create-pull-request.outputs.result }}
      run: |
        PULL_REQUEST_HTML_URL=$(echo ${RESULT} | jq -r .data.html_url)
        echo "PULL_REQUEST_HTML_URL=${PULL_REQUEST_HTML_URL}" >> $GITHUB_ENV
        PULL_REQUEST_NUMBER=$(echo ${RESULT} | jq -r .data.number)
        echo "PULL_REQUEST_NUMBER=${PULL_REQUEST_NUMBER}" >> $GITHUB_ENV

    - name: Send result with Pull Request
      if: success() && env.CHANGE_STATE == 'changed'
      uses: ./.github/actions/slack_notificator
      with:
        webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}
        text: ${{ format('{0} {1}\nPull Request <{2}>', github.workflow, job.status, env.PULL_REQUEST_HTML_URL) }}

    - name: Send result without Pull Request
      if: success() && env.CHANGE_STATE != 'changed'
      uses: ./.github/actions/slack_notificator
      with:
        webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}
        text: ${{ format('{0} {1}', github.workflow, job.status) }}

    - name: Get Pull Request ID
      if: success() && env.CHANGE_STATE == 'changed'
      env:
        GRAPHQL_ENDPOINT: ${{ github.graphql_url }}
        repo_name : ${{ github.event.repository.name }}
        repo_owner: ${{ github.event.repository.owner.name }}
        PULL_REQUEST_NUMBER: ${{ env.PULL_REQUEST_NUMBER }}
        URL: ${{ github.event.repository.url }}
      run: |
        result=$(curl -sS -H "Authorization: bearer ${{ secrets.PERSONAL_TOKEN_FOR_GITHUB_ACTIONS }}" -d @- ${GRAPHQL_ENDPOINT} <<EOF
        {
            "query": "query {
              repository(owner:\"$repo_owner\", name:\"$repo_name\") {
                pullRequest(number: ${PULL_REQUEST_NUMBER}) {
                  node {
                    id
                  }
                }
              }
            }"
        }
        EOF
        )
        echo $result | jq .

    - name: Pull request auto merge enabler
      if: success() && env.CHANGE_STATE == 'changed'
      env:
        PULL_REQUEST_ID: ""
        GRAPHQL_ENDPOINT: ${{ github.graphql_url }}
      run: |
        # curl --request POST \
        #     --header "authorization: Bearer ${{ secrets.PERSONAL_TOKEN_FOR_GITHUB_ACTIONS }}" \
        #     --header 'content-type: application/json' \
        #     d @- ${GRAPHQL_ENDPOINT} <<EOF
        # {
        #   "query": "mutation {
        #     enablePullRequestAutoMerge(input: {
        #       pullRequestId: \"${PULL_REQUEST_ID}\",
        #       clientMutationId : null
        #     }) {
        #       clientMutationId
        #     }
        #   }"
        # }
        # EOF `